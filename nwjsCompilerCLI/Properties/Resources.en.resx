<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SpilterText" xml:space="preserve">
    <value>================================================</value>
  </data>
  <data name="ProgramNameText" xml:space="preserve">
    <value>= RPG Maker MV Cook Tool (.NET Core CLI Version)</value>
  </data>
  <data name="ProgramVersionString" xml:space="preserve">
    <value>= Version R1.03 ({0})</value>
  </data>
  <data name="ProgramAuthorText" xml:space="preserve">
    <value>= Developed by AceOfAces.</value>
  </data>
  <data name="ProgramLicenseText" xml:space="preserve">
    <value>= Licensed under the MIT license.</value>
  </data>
  <data name="ParallelModeActiveText" xml:space="preserve">
    <value>Compiler is now running in parallel mode.</value>
  </data>
  <data name="SDKLocationConfirmationText" xml:space="preserve">
    <value>SDK Location OK.</value>
  </data>
  <data name="PushEnterToExitText" xml:space="preserve">
    <value>Push Enter/Return to exit.</value>
  </data>
  <data name="ProjectLocationConfirmationText" xml:space="preserve">
    <value>Project Location OK.</value>
  </data>
  <data name="FileExtensionSetText" xml:space="preserve">
    <value>The file extension is set to </value>
  </data>
  <data name="CannotCompressAndTestErrorText" xml:space="preserve">
    <value>You can't compress and test the project at the moment.</value>
  </data>
  <data name="JavascriptDeletionConfirmationTet" xml:space="preserve">
    <value>The JavaScript files will be deleted after compilation.</value>
  </data>
  <data name="NoCompressionConfirmationText" xml:space="preserve">
    <value>No compression will be used for the archive.</value>
  </data>
  <data name="FastestCompressionConfirmationText" xml:space="preserve">
    <value>The fastest compression will be used for the archive.</value>
  </data>
  <data name="OptimalCompressionCOnfirmationText" xml:space="preserve">
    <value>The optimal compression will be used for the archive (this is the default).</value>
  </data>
  <data name="SDKLocationInexistantText" xml:space="preserve">
    <value>The location of the SDK doesn't exist.</value>
  </data>
  <data name="CompilerMissingErrorText" xml:space="preserve">
    <value>The compiler isn't there. Please pick the folder that has the nwjc file</value>
  </data>
  <data name="ProjectLocationInexistantText" xml:space="preserve">
    <value>The location of the project doesn't exist.</value>
  </data>
  <data name="JsFolderMissingErrorText" xml:space="preserve">
    <value>The js folder doesn't exist.</value>
  </data>
  <data name="nwjsTestStartingText" xml:space="preserve">
    <value>NW.js will start after compiling.</value>
  </data>
  <data name="ProjectNotSetErrorText" xml:space="preserve">
    <value>The Project location is not set. Please set it with the --ProjectLocation "&lt;project location&gt;".</value>
  </data>
  <data name="SDKLocationNotSetErrorText" xml:space="preserve">
    <value>The SDK location is not set. Please set it with the --SDKLocation "&lt;project location&gt;".</value>
  </data>
  <data name="SDKLocationQuestion" xml:space="preserve">
    <value>Where's the SDK location? </value>
  </data>
  <data name="SDKLocationIsNullText" xml:space="preserve">
    <value>Please insert the path for the SDK.
</value>
  </data>
  <data name="SDKDirectoryMissing" xml:space="preserve">
    <value>The directory isn't there. Please select an existing folder.
</value>
  </data>
  <data name="ProjectLocationQuestion" xml:space="preserve">
    <value>
Where's the project you want to compile? </value>
  </data>
  <data name="ProjectLocationIsNullText" xml:space="preserve">
    <value>Please specify the location of the folder.
</value>
  </data>
  <data name="ProjetDirectoryMissingErrorText" xml:space="preserve">
    <value>The folder you've selected isn't present.
</value>
  </data>
  <data name="ProjectJsFolderMissing" xml:space="preserve">
    <value>There is no js folder.
</value>
  </data>
  <data name="FileExtensionQuestion" xml:space="preserve">
    <value>
What Extension will your game use (leave empty for .bin)? </value>
  </data>
  <data name="WorkloadQuestion" xml:space="preserve">
    <value>
Do you want to:
1. Test that the binary files are loaded properly?
2. Prepare for publishing?
(Default is 1) </value>
  </data>
  <data name="CompressionQuestion" xml:space="preserve">
    <value>
Would you like to compress the game's files to an archive?
1.Yes (delete the files as well).
2.Yes (but leave the files intact).
3. No.
(Default is 3)</value>
  </data>
  <data name="TestProjectQuestion" xml:space="preserve">
    <value>
Would you like to test the project after compiling? (Y/N, Default is N)
</value>
  </data>
  <data name="BinaryRemovalText" xml:space="preserve">
    <value>Removing binary files (if present)...</value>
  </data>
  <data name="ThreadWord" xml:space="preserve">
    <value>]Thread #</value>
  </data>
  <data name="CompilingWord" xml:space="preserve">
    <value> is compiling </value>
  </data>
  <data name="FinishedCompilingText" xml:space="preserve">
    <value> finished compiling </value>
  </data>
  <data name="CompilingWord2" xml:space="preserve">
    <value>Compiling </value>
  </data>
  <data name="FinishedCompilingText2" xml:space="preserve">
    <value>Finished compiling </value>
  </data>
  <data name="DateTimeFormatText" xml:space="preserve">
    <value>[{0}]</value>
  </data>
  <data name="CompilerTaskComplete" xml:space="preserve">
    <value>Finished compiling files.</value>
  </data>
  <data name="NwjsStartingTestNotificationText" xml:space="preserve">
    <value>
NW.js will now start. Give it a few seconds to start.</value>
  </data>
  <data name="CopyingToTempLocationText" xml:space="preserve">
    <value>Copying the game files to a temporary location...</value>
  </data>
  <data name="FileCompressionText" xml:space="preserve">
    <value>Compressing files...</value>
  </data>
  <data name="SourceFileDeletionText" xml:space="preserve">
    <value>Deleting source files...</value>
  </data>
  <data name="TaskCompleteText" xml:space="preserve">
    <value>
The task was completed.</value>
  </data>
  <data name="ProjectFilesRemovalAfterCompressionText" xml:space="preserve">
    <value>The project's files will be compressed (the files will be deleted after compressing).</value>
  </data>
  <data name="ProjectFilesCompressionConfirmText" xml:space="preserve">
    <value>The Project's files will be compressed</value>
  </data>
  <data name="CompressionSafeModeConfirmationText" xml:space="preserve">
    <value>Safe mode for compression is now active.</value>
  </data>
  <data name="CompressionNotPermittedText" xml:space="preserve">
    <value>Compression is not allowed if the "--PackageApp" command line argument is specified. Skipping this step.</value>
  </data>
</root>