<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SpilterText" xml:space="preserve">
    <value>================================================</value>
  </data>
  <data name="ProgramNameText" xml:space="preserve">
    <value>= RPG Maker MV Cook Tool (.NET Core CLI Version)</value>
  </data>
  <data name="ProgramVersionString" xml:space="preserve">
    <value>= Version R2.02 ({0})</value>
    <comment>String ID: ProgramVersionString
This is the command line app's version string.</comment>
  </data>
  <data name="ProgramAuthorText" xml:space="preserve">
    <value>= Entwickelt von AceOfAces.</value>
  </data>
  <data name="ProgramLicenseText" xml:space="preserve">
    <value>= Lizenziert unter der MIT-Lizenz.</value>
  </data>
  <data name="ParallelModeActiveText" xml:space="preserve">
    <value>Compiler läuft jetzt im Parallelmodus.</value>
  </data>
  <data name="SDKLocationConfirmationText" xml:space="preserve">
    <value>SDK Position OK.</value>
  </data>
  <data name="PushEnterToExitText" xml:space="preserve">
    <value>Drücken Sie Enter/Zurück zum Beenden.</value>
  </data>
  <data name="ProjectLocationConfirmationText" xml:space="preserve">
    <value>Projektort OK.</value>
  </data>
  <data name="FileExtensionSetText" xml:space="preserve">
    <value>Die Dateiendung ist gesetzt auf </value>
  </data>
  <data name="CannotCompressAndTestErrorText" xml:space="preserve">
    <value>Sie können das Projekt im Moment nicht komprimieren und testen.</value>
  </data>
  <data name="JavascriptDeletionConfirmationTet" xml:space="preserve">
    <value>Die JavaScript-Dateien werden nach der Kompilierung gelöscht.</value>
  </data>
  <data name="NoCompressionConfirmationText" xml:space="preserve">
    <value>Für das Archiv wird keine Komprimierung verwendet.</value>
  </data>
  <data name="FastestCompressionConfirmationText" xml:space="preserve">
    <value>Die schnellste Komprimierung wird für das Archiv verwendet.</value>
  </data>
  <data name="OptimalCompressionCOnfirmationText" xml:space="preserve">
    <value>Die optimale Komprimierung wird für das Archiv verwendet (dies ist die Standard).</value>
  </data>
  <data name="SDKLocationInexistantText" xml:space="preserve">
    <value>Der Speicherort des SDK existiert nicht.</value>
  </data>
  <data name="CompilerMissingErrorText" xml:space="preserve">
    <value>Der Compiler ist nicht vorhanden. Bitte wählen Sie den Ordner, der die nwjc-Datei hat.</value>
  </data>
  <data name="ProjectLocationInexistantText" xml:space="preserve">
    <value>Der Standort des Projekts existiert nicht.</value>
  </data>
  <data name="JsonFileMissingErrorText" xml:space="preserve">
    <value>Die package.json-Datei existiert nicht.</value>
  </data>
  <data name="nwjsTestStartingText" xml:space="preserve">
    <value>NW.js startet nach dem Kompilieren.</value>
  </data>
  <data name="ProjectNotSetErrorText" xml:space="preserve">
    <value>Der Projektstandort ist nicht festgelegt. Bitte setzen Sie ihn mit dem --ProjectLocation "&lt;project location&gt;".</value>
  </data>
  <data name="SDKLocationNotSetErrorText" xml:space="preserve">
    <value>Das SDK-Verzeichnis ist nicht gesetzt. Bitte setzen Sie es mit dem --SDKLocation "&lt;project location&gt;".</value>
  </data>
  <data name="SDKLocationQuestion" xml:space="preserve">
    <value>Wo ist der SDK-Standort? </value>
  </data>
  <data name="SDKLocationIsNullText" xml:space="preserve">
    <value>Bitte fügen Sie den Pfad für das SDK ein.
</value>
  </data>
  <data name="SDKDirectoryMissing" xml:space="preserve">
    <value>Das Verzeichnis ist nicht vorhanden. Bitte wählen Sie einen existierenden Ordner.
</value>
  </data>
  <data name="ProjectLocationQuestion" xml:space="preserve">
    <value>
Wo ist das Projekt, das Sie kompilieren möchten? </value>
  </data>
  <data name="ProjectLocationIsNullText" xml:space="preserve">
    <value>Bitte geben Sie die Position des Ordners an.
</value>
  </data>
  <data name="ProjetDirectoryMissingErrorText" xml:space="preserve">
    <value>Der Ordner, den Sie ausgewählt haben, ist nicht vorhanden.
</value>
  </data>
  <data name="ProjectJsFolderMissing" xml:space="preserve">
    <value>Es gibt keinen js Ordner.
</value>
  </data>
  <data name="FileExtensionQuestion" xml:space="preserve">
    <value>
Welche Erweiterung wird dein Spiel verwenden (leer lassen für .bin)? </value>
  </data>
  <data name="WorkloadQuestion" xml:space="preserve">
    <value>
Wollen Sie zu:
1. Prüfen Sie, ob die Binärdateien korrekt geladen werden?
2. Bereiten Sie sich auf das Publizieren vor?
(Standard ist 1) </value>
  </data>
  <data name="CompressionQuestion" xml:space="preserve">
    <value>
Möchtest du die Dateien des Spiels in ein Archiv komprimieren?
1.Ja (lösche auch die Dateien).
2.Ja (aber lassen Sie die Dateien intakt).
3. Nein.
(Standard ist 3)</value>
  </data>
  <data name="TestProjectQuestion" xml:space="preserve">
    <value>
Möchten Sie das Projekt nach dem Kompilieren testen? (Y/N, Standard ist N)
</value>
  </data>
  <data name="BinaryRemovalText" xml:space="preserve">
    <value>Entferne Binärdateien (falls vorhanden)...</value>
  </data>
  <data name="ThreadWord" xml:space="preserve">
    <value>]Thread #</value>
  </data>
  <data name="CompilingWord" xml:space="preserve">
    <value> kompiliert </value>
  </data>
  <data name="FinishedCompilingText" xml:space="preserve">
    <value> fertige Kompilierung </value>
  </data>
  <data name="CompilingWord2" xml:space="preserve">
    <value>Kompilieren </value>
  </data>
  <data name="FinishedCompilingText2" xml:space="preserve">
    <value>Kompilierung abgeschlossen </value>
  </data>
  <data name="DateTimeFormatText" xml:space="preserve">
    <value>[{0}]</value>
  </data>
  <data name="CompilerTaskComplete" xml:space="preserve">
    <value>Kompilieren von Dateien abgeschlossen.</value>
  </data>
  <data name="NwjsStartingTestNotificationText" xml:space="preserve">
    <value>
NW.js starten jetzt. Geben Sie ihm ein paar Sekunden zum Starten.</value>
  </data>
  <data name="CopyingToTempLocationText" xml:space="preserve">
    <value>Kopieren der Spieldateien an einen temporären Ort...</value>
  </data>
  <data name="FileCompressionText" xml:space="preserve">
    <value>Dateien werden komprimiert...</value>
  </data>
  <data name="SourceFileDeletionText" xml:space="preserve">
    <value>Lösche Quelldateien...</value>
  </data>
  <data name="TaskCompleteText" xml:space="preserve">
    <value>
Die Aufgabe wurde abgeschlossen.</value>
  </data>
  <data name="ProjectFilesRemovalAfterCompressionText" xml:space="preserve">
    <value>Die Dateien des Projekts werden komprimiert (die Dateien werden nach dem Komprimieren gelöscht).</value>
  </data>
  <data name="ProjectFilesCompressionConfirmText" xml:space="preserve">
    <value>Die Dateien des Projekts werden komprimiert</value>
  </data>
  <data name="CompressionSafeModeConfirmationText" xml:space="preserve">
    <value>Der Safe Mode für Komprimierung ist jetzt aktiv.</value>
  </data>
  <data name="CompressionNotPermittedText" xml:space="preserve">
    <value>Komprimierung ist nicht zulässig, wenn das Kommandozeilenargument "--PackageApp" angegeben ist. Überspringen Sie diesen Schritt.</value>
  </data>
  <data name="JsonReferenceError" xml:space="preserve">
    <value>Auf package.json wurde keine Referenz gefunden (oder der angegebene Ordner ist nicht da). Bitte überprüfen Sie, dass die json-Datei die "main"-Variable enthält und der Ordner existiert.</value>
  </data>
  <data name="CommandLineArgsTitle" xml:space="preserve">
    <value>[orange1]Kommandozeilenargumente[/]</value>
  </data>
  <data name="SetupTitle" xml:space="preserve">
    <value>[orange1]Setup[/]</value>
  </data>
  <data name="WorkTitle" xml:space="preserve">
    <value>[orange1]Arbeit[/]</value>
  </data>
  <data name="SDKLocationEntry" xml:space="preserve">
    <value>SDK-Standort</value>
  </data>
  <data name="ProjectLocationEntry" xml:space="preserve">
    <value>Projektstandort</value>
  </data>
  <data name="FileExtensionEntry" xml:space="preserve">
    <value>Dateiendung</value>
  </data>
  <data name="CompressionEntry" xml:space="preserve">
    <value>Komprimierung</value>
  </data>
  <data name="CompressionLevelEntry" xml:space="preserve">
    <value>Komprimierungsstufe</value>
  </data>
  <data name="NoCompression" xml:space="preserve">
    <value>Keine Komprimierung</value>
  </data>
  <data name="FastestCompression" xml:space="preserve">
    <value>Schnellste</value>
  </data>
  <data name="OptimalCompression" xml:space="preserve">
    <value>Optimal</value>
  </data>
  <data name="CompressAndRemoveEntry" xml:space="preserve">
    <value>Quelldateien komprimieren und entfernen</value>
  </data>
  <data name="CompressOnlyEntry" xml:space="preserve">
    <value>Nur komprimieren</value>
  </data>
  <data name="DarkcyanCompilingJSFilesText" xml:space="preserve">
    <value>[darkcyan]JS-Dateien kompilieren[/]</value>
  </data>
  <data name="PackagingGameText" xml:space="preserve">
    <value>Die Spieldateien werden verpackt...</value>
  </data>
  <data name="TestAfterCompilingEntry" xml:space="preserve">
    <value>Test nach dem Kompilieren</value>
  </data>
  <data name="CommonWordYes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="CommonWordNo" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="RemoveSourceFilesEntry" xml:space="preserve">
    <value>JS-Quelldateien entfernen</value>
  </data>
  <data name="SettingTitle" xml:space="preserve">
    <value>Einstellung</value>
  </data>
  <data name="ValueTitle" xml:space="preserve">
    <value>Wert</value>
  </data>
</root>